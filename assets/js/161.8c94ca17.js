(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{643:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("🌙")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("比如说"),a("code",[t._v("+")]),t._v("、"),a("code",[t._v("*")]),t._v("、"),a("code",[t._v("/")]),t._v("、"),a("code",[t._v("(")]),t._v(" 都是"),a("strong",[t._v("运算符")]),t._v("，而"),a("code",[t._v("（3+5）/2")]),t._v("则是"),a("strong",[t._v("表达式")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"运算符的定义和分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符的定义和分类"}},[t._v("🌙")]),t._v(" 运算符的定义和分类")]),t._v(" "),a("p",[t._v("运算符也叫操作符。通过运算符可以对一个或多个值进行运算，并获取运算结果。")]),t._v(" "),a("p",[t._v("比如：typeof 就是运算符，可以来获得一个值的类型。它会将该值的类型以"),a("strong",[t._v("字符串")]),t._v("的形式返回：number string boolean undefined object。")]),t._v(" "),a("p",[t._v("注：运算符都是会返回结果的，而typeof这个运算符返回的结果就是变量的类型。那返回的结果的类型是什么呢？是字符串。")]),t._v(" "),a("p",[t._v("运算符有很多分类，比如：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("算数运算符")])]),t._v(" "),a("li",[a("p",[t._v("自增运算符")])]),t._v(" "),a("li",[a("p",[t._v("逻辑运算符")])]),t._v(" "),a("li",[a("p",[t._v("赋值运算符")])]),t._v(" "),a("li",[a("p",[t._v("关系运算符")])]),t._v(" "),a("li",[a("p",[t._v("三元运算符（条件运算符）")])])]),t._v(" "),a("h2",{attrs:{id:"算数运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符"}},[t._v("🌙")]),t._v(" 算数运算符")]),t._v(" "),a("p",[t._v("常见的算数运算符有以下几种：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.smyhvae.com/20180117_1651.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("求余的举例")]),t._v("：")]),t._v(" "),a("p",[t._v("假设用户输入345，怎么分别得到3、4、5这三个数呢？")]),t._v(" "),a("p",[a("strong",[t._v("答案")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\t得到3的方法：345 除以100，得到3.45然后取整，得到3。即：parseInt(345/100)\n\n\t得到4的方法：345 除以100，余数是45，除以10，得到4.5，取整。即：parseInt(345 % 100 / 10)\n\n\t得到5的方法：345 除以10，余数就是5。即：345 % 10\n")])])]),a("h3",{attrs:{id:"算数运算符的运算规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符的运算规则"}},[t._v("🌙")]),t._v(" 算数运算符的运算规则")]),t._v(" "),a("p",[t._v("（1）先算乘除、后算加减。")]),t._v(" "),a("p",[t._v("（2）小括号：能够影响计算顺序，且可以嵌套。没有中括号、没有大括号，只有小括号。")]),t._v(" "),a("p",[t._v("（3）百分号：取余。只关心余数。")]),t._v(" "),a("p",[t._v("举例1：(取余)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\tconsole.log(3 % 5);\n")])])]),a("p",[t._v("输出结果为3。")]),t._v(" "),a("p",[t._v("举例2：（注意运算符优先级）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\tvar a = 1 + 2 * 3 % 4 / 3;\n")])])]),a("p",[t._v("结果分析：")]),t._v(" "),a("p",[t._v("原式 =  1 + 6 % 4 / 3 = 1 + 2 / 3 = 1.66666666666666")]),t._v(" "),a("h3",{attrs:{id:"算数运算符的注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符的注意事项"}},[t._v("🌙")]),t._v(" 算数运算符的注意事项")]),t._v(" "),a("p",[t._v("（1）当对非Number类型的值进行运算（包括"),a("code",[t._v("+")]),t._v("、"),a("code",[t._v("-")]),t._v("、"),a("code",[t._v("*")]),t._v("、"),a("code",[t._v("/")]),t._v("）时，会将这些值转换为Number然后再运算。（注："),a("code",[t._v("字符串 + Number")]),t._v("、"),a("code",[t._v("字符串 + 字符串")]),t._v("是特例，稍后再讲）")]),t._v(" "),a("p",[t._v("比如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    result1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2 = 1+ 1")]),t._v("\n\n    result2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 = 1+ 0")]),t._v("\n\n    result3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 = 1+ 0")]),t._v("\n\n    result4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 99")]),t._v("\n")])])]),a("p",[t._v("（2）任何值和NaN做运算的结果都是NaN。")]),t._v(" "),a("p",[t._v("（3）任何的值和字符串做加法运算，都会先转换为字符串，然后再做拼串操作。")]),t._v(" "),a("p",[t._v("比如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    result1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 33")]),t._v("\n\n    result2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n")])])]),a("p",[t._v('我们可以利用这一特点，来将一个任意的数据类型转换为String：我们只需要为任意的数据类型 + 一个 "" 即可将其转换为String。这是一种'),a("strong",[t._v("隐式")]),t._v("的类型转换，由浏览器自动完成，实际上它也是调用String()函数。也就是说，"),a("code",[t._v('c = c + ""')]),t._v(" 等价于 "),a("code",[t._v("c = String(c)")]),t._v("。")]),t._v(" "),a("p",[t._v("（4）任何值做"),a("code",[t._v("-")]),t._v("、"),a("code",[t._v("*")]),t._v("、"),a("code",[t._v("/")]),t._v("运算时都会自动转换为Number。")]),t._v(" "),a("p",[t._v("我们可以利用这一特点，为一个值"),a("code",[t._v("-0")]),t._v("、"),a("code",[t._v("*1")]),t._v("、"),a("code",[t._v("/1")]),t._v("来将其转换为Number。原理和Number()函数一样，使用起来更加简单。")]),t._v(" "),a("h3",{attrs:{id:"乘方"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#乘方"}},[t._v("🌙")]),t._v(" 乘方")]),t._v(" "),a("p",[t._v("如果想计算 "),a("code",[t._v("a 的 b 次方")]),t._v("，可以使用如下函数：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\tMath.pow(a, b);\n")])])]),a("p",[t._v("Math的中文是“数学”，pow是“power 幂”。")]),t._v(" "),a("p",[a("strong",[t._v("举例1：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.smyhvae.com/20180117_1730.png",alt:""}})]),t._v(" "),a("p",[t._v("代码实现：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\tvar a = Math.pow(3, Math.pow(2, 2));\n\tconsole.log(a);\n")])])]),a("p",[a("strong",[t._v("举例2：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.smyhvae.com/20180117_1740.png",alt:""}})]),t._v(" "),a("p",[t._v("代码实现：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\tvar a = Math.pow(Math.pow(3, 2), 4);\n\tconsole.log(a);\n")])])]),a("h3",{attrs:{id:"开方"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开方"}},[t._v("🌙")]),t._v(" 开方")]),t._v(" "),a("p",[t._v("如果想计算数值a的开二次方，可以使用如下函数：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\t Math.sqrt(a);\n")])])]),a("p",[t._v("sqrt即“square 开方”。比如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\tvar a = Math.sqrt(36);\n")])])]),a("h2",{attrs:{id:"一元运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一元运算符"}},[t._v("🌙")]),t._v(" 一元运算符")]),t._v(" "),a("p",[t._v("一元运算符，只需要一个操作数。")]),t._v(" "),a("p",[t._v("常见的一元运算符如下。")]),t._v(" "),a("h3",{attrs:{id:"typeof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[t._v("🌙")]),t._v(" typeof")]),t._v(" "),a("p",[t._v("typeof就是典型的一元运算符，因为后面只跟一个操作数。")]),t._v(" "),a("p",[t._v("举例如下：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果：string")]),t._v("\n")])])]),a("h3",{attrs:{id:"正号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正号"}},[t._v("🌙")]),t._v(" 正号 "),a("code",[t._v("+")])]),t._v(" "),a("p",[t._v("（1）正号不会对数字产生任何影响。比如说，"),a("code",[t._v("2")]),t._v("和"),a("code",[t._v("+2")]),t._v("是一样的。")]),t._v(" "),a("p",[t._v("（2）我们可以对一个其他的数据类型使用"),a("code",[t._v("+")]),t._v("，来将其转换为number【小技巧】。比如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意这行代码的一元运算符操作")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a：'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-----------------'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'18'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意这行代码的一元运算符操作")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b：'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("打印结果：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.smyhvae.com/20181221_2050.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"负号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负号"}},[t._v("🌙")]),t._v(" 负号 "),a("code",[t._v("-")])]),t._v(" "),a("p",[t._v("负号可以对数字进行取反。")]),t._v(" "),a("h2",{attrs:{id:"自增和自减"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自增和自减"}},[t._v("🌙")]),t._v(" 自增和自减")]),t._v(" "),a("h3",{attrs:{id:"自增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自增"}},[t._v("🌙")]),t._v(" 自增 "),a("code",[t._v("++")])]),t._v(" "),a("p",[t._v("自增分成两种："),a("code",[t._v("a++")]),t._v("和"),a("code",[t._v("++a")]),t._v("。")]),t._v(" "),a("p",[t._v("（1）对于一个变量自增以后，原变量的值会"),a("strong",[t._v("立即")]),t._v("自增1。也就是说，无论是 "),a("code",[t._v("a++")]),t._v(" 还是"),a("code",[t._v("++a")]),t._v("，都会立即使原变量的值自增1。")]),t._v(" "),a("p",[t._v("（2）"),a("strong",[t._v("我们要注意的是")]),t._v("："),a("code",[t._v("a")]),t._v("是变量，而"),a("code",[t._v("a++")]),t._v("和"),a("code",[t._v("++a")]),t._v("是"),a("strong",[t._v("表达式")]),t._v("。")]),t._v(" "),a("p",[t._v("那这两种自增，有啥区别呢？区别是："),a("code",[t._v("a++")]),t._v(" 和 "),a("code",[t._v("++a")]),t._v("的值不同：（也就是说，表达式的值不同）")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("a++")]),t._v("的值等于原变量的值（a自增前的值）")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("++a")]),t._v("的值等于新值 （a自增后的值）")])])]),t._v(" "),a("h3",{attrs:{id:"自减"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自减"}},[t._v("🌙")]),t._v(" 自减 "),a("code",[t._v("--")])]),t._v(" "),a("p",[t._v("原理同上。")]),t._v(" "),a("h3",{attrs:{id:"代码举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码举例"}},[t._v("🌙")]),t._v(" 代码举例")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//n1 = 11  n1++ = 10")]),t._v("\n\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'n='")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'n1='")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//11")]),t._v("\n\n\tn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("n1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//n1 = 12  ++n1 =12")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'n='")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'n1='")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12")]),t._v("\n\n\tn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// n2=19 n2--=20")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'n='")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//20")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'n2='")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//19")]),t._v("\n\n\tn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//n2=18 --n2 = 18")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'n='")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//18")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'n2='")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//18")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("🌙")]),t._v(" 逻辑运算符")]),t._v(" "),a("p",[t._v("逻辑运算符有三个：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("&&")]),t._v(" \t与（且）：两个都为真，结果才为真。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("||")]),t._v("\t或：只要有一个是真，结果就是真。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("!")]),t._v("\t\t非：对一个布尔值进行取反。")])])]),t._v(" "),a("p",[a("strong",[t._v("连比的写法：")])]),t._v(" "),a("p",[t._v("来看看逻辑运算符连比的写法。")]),t._v(" "),a("p",[t._v("举例1：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("输出结果为false。")]),t._v(" "),a("p",[t._v("举例2：（判断一个人的年龄是否在18~60岁之间）")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prompt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入您的年龄"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("PS：上面的这个"),a("code",[t._v("a>=18 && a<= 65")]),t._v("千万别想当然的写成"),a("code",[t._v("18<= a <= 65")]),t._v("，没有这种语法。")]),t._v(" "),a("h3",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("🌙")]),t._v(" 注意事项")]),t._v(" "),a("p",[t._v("（1）能参与逻辑运算的，都是布尔值。")]),t._v(" "),a("p",[t._v("（2）JS中的"),a("code",[t._v("&&")]),t._v("属于"),a("strong",[t._v("短路")]),t._v("的与，如果第一个值为false，则不会看第二个值。举例：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一个值为true，会检查第二个值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"看我出不出来！！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以弹出 alert 框")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一个值为false，不会检查第二个值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"看我出不出来！！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不会弹出 alert 框")]),t._v("\n")])])]),a("p",[t._v("（3）JS中的"),a("code",[t._v("||")]),t._v("属于"),a("strong",[t._v("短路")]),t._v("的或，如果第一个值为true，则不会看第二个值。举例：")]),t._v(" "),a("p",[t._v("（4）如果对"),a("strong",[t._v("非布尔值")]),t._v("进行逻辑运算，则会"),a("strong",[t._v("先将其转换为布尔值")]),t._v("，然后再操作。举例：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean")]),t._v("\n")])])]),a("p",[t._v("上面的例子，我们可以看到，对非布尔值进行"),a("code",[t._v("!")]),t._v("操作之后，返回结果为布尔值。")]),t._v(" "),a("h3",{attrs:{id:"非布尔值的与或运算【重要】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非布尔值的与或运算【重要】"}},[t._v("🌙")]),t._v(" 非布尔值的与或运算【重要】")]),t._v(" "),a("blockquote",[a("p",[t._v("之所以重要，是因为在实际开发中，我们经常用这种代码做容错处理。")])]),t._v(" "),a("p",[t._v("非布尔值进行"),a("strong",[t._v("与或运算")]),t._v("时，会先将其转换为布尔值，然后再运算，但返回结果是"),a("strong",[t._v("原值")]),t._v("。比如说：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运算过程：true && true;")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'result：'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果：6（也就是说最后面的那个值。）")]),t._v("\n")])])]),a("p",[t._v("上方代码可以看到，虽然运算过程为布尔值的运算，但返回结果是原值。")]),t._v(" "),a("p",[t._v("那么，返回结果是哪个原值呢？我们来看一下。")]),t._v(" "),a("p",[a("strong",[t._v("与运算")]),t._v("的返回结果：（以两个非布尔值的运算为例）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果第一个值为true，则必然返回第二个值（所以说，如果所有的值都为true，则返回的是最后一个值）")])]),t._v(" "),a("li",[a("p",[t._v("如果第一个值为false，则直接返回第一个值")])])]),t._v(" "),a("p",[a("strong",[t._v("或运算")]),t._v("的返回结果：（以两个非布尔值的运算为例）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果第一个值为true，则直接返回第一个值")])]),t._v(" "),a("li",[a("p",[t._v("如果第一个值为false，则返回第二个值")])])]),t._v(" "),a("p",[t._v("实际开发中，我们经常是这样来处理容错的：")]),t._v(" "),a("p",[t._v("当成功调用一个接口后，针对返回的数据 result，假设我们用变量a  接收。通常的写法是这样的：（这里我只是举个例子）")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resultCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("imgUrl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("🌙")]),t._v(" 赋值运算符")]),t._v(" "),a("p",[t._v("可以将符号右侧的值赋值给符号左侧的变量。")]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("+=")]),t._v("。a += 5 等价于 a = a + 5")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("-=")]),t._v("。a -= 5 等价于 a = a - 5")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("*=")]),t._v("。a *= 5 等价于 a = a * 5")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("/=")]),t._v("。a /= 5 等价于 a = a / 5")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("%=")]),t._v("。a %= 5 等价于 a = a % 5")])])]),t._v(" "),a("h2",{attrs:{id:"关系运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[t._v("🌙")]),t._v(" 关系运算符")]),t._v(" "),a("p",[t._v("通过关系运算符可以比较两个值之间的大小关系，如果关系成立它会返回true，如果关系不成立则返回false。")]),t._v(" "),a("p",[t._v("关系运算符有很多种，比如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\t>\t大于号\n\t<\t小于号\n\t>= \t大于或等于\n\t<=  小于或等于\n\t== \t等于\n\t=== 全等于\n\t!=\t不等于\n\t!== 不全等于\n")])])]),a("p",[a("strong",[t._v("关系运算符，得到的结果都是布尔值：要么是true，要么是false")]),t._v("。")]),t._v(" "),a("p",[t._v("举例如下：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("h3",{attrs:{id:"非数值的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非数值的比较"}},[t._v("🌙")]),t._v(" 非数值的比较")]),t._v(" "),a("p",[t._v("（1）对于非数值进行比较时，会将其转换为数字然后再比较。")]),t._v(" "),a("p",[t._v("举例如下：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(10 > null); //true")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//任何值和NaN做任何比较都是false")]),t._v("\n\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n")])])]),a("p",[t._v("（2）特殊情况：如果符号两侧的值都是字符串时，"),a("strong",[t._v("不会")]),t._v("将其转换为数字进行比较。比较两个字符串时，比较的是字符串的"),a("strong",[t._v("Unicode编码")]),t._v("。【非常重要，这里是个大坑】")]),t._v(" "),a("p",[t._v("比较字符编码时，是一位一位进行比较。如果两位一样，则比较下一位，所以借用它可以来对英文进行排序。")]),t._v(" "),a("p",[t._v("PS：所以说，当你尝试去比较"),a("code",[t._v('"123"')]),t._v("和"),a("code",[t._v('"56"')]),t._v('这两个字符串时，你会发现，字符串"56"竟然比字符串"123"要大。也就是说，下面这样代码的打印结果，其实是true:（这个我们一定要注意，在日常开发中，很容易忽视）')]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比较两个字符串时，比较的是字符串的字符编码，所以可能会得到不可预期的结果")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"56"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[a("strong",[t._v("因此")]),t._v("：当我们在比较两个字符串型的数字时，"),a("strong",[t._v("一定一定要先转型")]),t._v("，比如 "),a("code",[t._v("parseInt()")]),t._v("。")]),t._v(" "),a("p",[t._v("（3）任何值和NaN做任何比较都是false。")]),t._v(" "),a("h3",{attrs:{id:"符号的强调"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#符号的强调"}},[t._v("🌙")]),t._v(" "),a("code",[t._v("==")]),t._v("符号的强调")]),t._v(" "),a("p",[t._v("注意"),a("code",[t._v("==")]),t._v("这个符号，它是"),a("strong",[t._v("判断是否等于")]),t._v("，而不是赋值。")]),t._v(" "),a("p",[t._v("（1）"),a("code",[t._v("==")]),t._v("这个符号，还可以验证字符串是否相同。例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\tconsole.log("我爱你中国" == "我爱你中国");\t\t//输出结果为true\n')])])]),a("p",[t._v("（2）"),a("code",[t._v("==")]),t._v("这个符号并不严谨，会将不同类型的东西，"),a("strong",[t._v("转为相同类型")]),t._v("进行比较（大部分情况下，都是转换为数字）。例如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印结果：true。这里的字符串"6"会先转换为数字6，然后再进行比较')]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果：true")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果：true")]),t._v("\n\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果：true")]),t._v("\n")])])]),a("p",[t._v("（3）undefined 衍生自 null，所以这两个值做相等判断时，会返回true。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果：true。")]),t._v("\n")])])]),a("p",[t._v("（4）NaN不和任何值相等，包括他本身。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),a("p",[t._v("问题：那如果我想判断  b的值是否为NaN，该怎么办呢？")]),t._v(" "),a("p",[t._v("答案：可以通过isNaN()函数来判断一个值是否是NaN。举例：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),a("p",[t._v("如上方代码所示，如果 b 为 NaN，则返回true；否则返回false。")]),t._v(" "),a("h3",{attrs:{id:"全等符号的强调"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全等符号的强调"}},[t._v("🌙")]),t._v(" "),a("code",[t._v("===")]),t._v("全等符号的强调")]),t._v(" "),a("p",[t._v("如果要保证"),a("strong",[t._v("完全等于")]),t._v("，我们就要用三个等号"),a("code",[t._v("===")]),t._v("。"),a("strong",[t._v("全等不会做类型转换")]),t._v("。例如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("p",[t._v("上述内容分析出：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("==")]),t._v('两个等号，不严谨，"6"和6是true。')])]),t._v(" "),a("li",[a("p",[a("code",[t._v("===")]),t._v('三个等号，严谨，"6"和6是false。')])])]),t._v(" "),a("p",[t._v("另外还有："),a("strong",[a("code",[t._v("==")]),t._v("的反面是"),a("code",[t._v("!=")]),t._v("，"),a("code",[t._v("===")]),t._v("的反面是"),a("code",[t._v("!==")]),t._v("。")]),t._v("。例如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//false，因为3=="3"是true，所以反过来就是false。')]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//true，应为3==="3"是false，所以反过来是true。')]),t._v("\n")])])]),a("h2",{attrs:{id:"三元运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符"}},[t._v("🌙")]),t._v(" 三元运算符")]),t._v(" "),a("p",[t._v("三元运算符也叫条件运算符。")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("条件表达式?语句1:语句2;\n")])])]),a("p",[a("strong",[t._v("执行的流程")]),t._v("：")]),t._v(" "),a("p",[t._v("条件运算符在执行时，首先对条件表达式进行求值：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果该值为true，则执行语句1，并返回执行结果")])]),t._v(" "),a("li",[a("p",[t._v("如果该值为false，则执行语句2，并返回执行结果")])])]),t._v(" "),a("p",[t._v("如果条件的表达式的求值结果是一个非布尔值，会将其转换为布尔值然后再运算。")]),t._v(" "),a("h2",{attrs:{id:"运算符的优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符的优先级"}},[t._v("🌙")]),t._v(" 运算符的优先级")]),t._v(" "),a("p",[t._v("运算符的优先级如下：（越往上，优先级越高）")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v(".")]),t._v("、"),a("code",[t._v("[]")]),t._v("、"),a("code",[t._v("new")])])]),t._v(" "),a("li",[a("p",[t._v("()")])]),t._v(" "),a("li",[a("p",[t._v("++、--")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("!")]),t._v("、"),a("code",[t._v("~")]),t._v("、"),a("code",[t._v("+")]),t._v("（单目）、"),a("code",[t._v("-")]),t._v("（单目）、"),a("code",[t._v("typeof")]),t._v("、"),a("code",[t._v("void")]),t._v("、"),a("code",[t._v("delete")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("%")]),t._v("、"),a("code",[t._v("*")]),t._v("、"),a("code",[t._v("/")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("+")]),t._v("（双目）、"),a("code",[t._v("-")]),t._v("（双目）")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("<<")]),t._v("、"),a("code",[t._v(">>")]),t._v("、"),a("code",[t._v(">>>")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("<")]),t._v("、"),a("code",[t._v("<=")]),t._v("、"),a("code",[t._v(">")]),t._v("、"),a("code",[t._v(">=")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("==")]),t._v("、"),a("code",[t._v("!==")]),t._v("、"),a("code",[t._v("===")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("&")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("^")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("|")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("&&")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("||")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("?:")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("=")]),t._v("、"),a("code",[t._v("+=")]),t._v("、"),a("code",[t._v("-=")]),t._v("、"),a("code",[t._v("*=")]),t._v("、"),a("code",[t._v("/=")]),t._v("、"),a("code",[t._v("%=")]),t._v("、"),a("code",[t._v("<<=")]),t._v("、"),a("code",[t._v(">>=")]),t._v("、"),a("code",[t._v(">>>=")]),t._v("、"),a("code",[t._v("&=")]),t._v("、"),a("code",[t._v("^=")]),t._v("、"),a("code",[t._v("|=")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v(",")])])])]),t._v(" "),a("p",[t._v("备注：你在实际写代码的时候，如果不清楚哪个优先级更高，可以把括号运用上。")]),t._v(" "),a("h2",{attrs:{id:"unicode-编码表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unicode-编码表"}},[t._v("🌙")]),t._v(" Unicode 编码表")]),t._v(" "),a("blockquote",[a("p",[t._v("这一段中，我们来讲引申的内容：Unicode编码的使用。")])]),t._v(" "),a("p",[t._v("1、在字符串中可以使用转义字符输入Unicode编码。格式如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\t\\u四位编码\n")])])]),a("p",[t._v("举例如下：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\u2600"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的 2600 采用的是16进制")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\u2602"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的 2602 采用的是16进制。")]),t._v("\n")])])]),a("p",[t._v("打印结果：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.smyhvae.com/20181222_1218.png",alt:""}})]),t._v(" "),a("p",[t._v("2、同样，我们可以在网页中使用Unicode编码。格式如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("&#编码;\n")])])]),a("p",[t._v("PS：我们知道，Unicode编码采用的是16进制，但是，这里的编码需要使用10进制。")]),t._v(" "),a("p",[t._v("举例如下：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token entity",title:"&#9860;"}},[t._v("&#9860;")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),a("p",[t._v("打印结果：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.smyhvae.com/20181222_1226.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"我的公众号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的公众号"}},[t._v("🌙")]),t._v(" 我的公众号")]),t._v(" "),a("p",[t._v("想学习"),a("font",{attrs:{color:"#0000ff"}},[a("strong",[t._v("代码之外的技能")])]),t._v("？不妨关注我的微信公众号："),a("strong",[t._v("千古壹号")]),t._v("（id："),a("code",[t._v("qianguyihao")]),t._v("）。")],1),t._v(" "),a("p",[t._v("扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.smyhvae.com/2016040102.jpg",alt:""}})])])}),[],!1,null,null,null);s.default=e.exports}}]);